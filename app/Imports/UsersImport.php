<?php

namespace App\Imports;

use App\Models\LeadStatus;
use App\Models\User;
use App\Models\UserDetail;
use App\Services\WhatsappService;
use Illuminate\Support\Collection;
use Illuminate\Support\Facades\Hash;
use Maatwebsite\Excel\Concerns\ToCollection;
use Maatwebsite\Excel\Concerns\WithHeadingRow;
use Maatwebsite\Excel\Concerns\WithValidation;

class UsersImport implements ToCollection, WithHeadingRow,WithValidation
{
    public function rules(): array
    {
        return [
            'name'           => 'required|regex:/^[\pL\s\-]+$/u|string|min:3|max:50',
            'email'          => 'required|email|string|max:255|unique:users,email',
            'mobilecode'     => 'required|numeric|digits_between:1,4',
            'mobile'         => 'required|numeric|digits_between:10,13|unique:users,mobile',
            'whatsappnumber' => 'required|numeric|digits_between:10,13|unique:users,whatsappnumber',
            'state'          => 'required|regex:/^[\pL\s\-]+$/u|string|min:3|max:50',
            'refrence'       => 'required|numeric|min:0|max:5',
            'growth'         => 'required|numeric|min:0|max:3',
            'edulevel'       => 'required|numeric|min:0|max:7',
            'gender'         => 'required|numeric|min:0|max:2',
            'leadtype'       => 'required|numeric|min:1|max:4',
            'comments'       => 'required|string|min:3|max:255',
        ];
    }

    public function collection(Collection $rows)
    {
        $errorbag=collect();


        foreach ($rows as $row) {
            if (!User::where('mobile', $row['mobile'])->exists()) {
                
                // lead create variables 
                $registeruser=User::create([
                    'name'           => $row['name'],
                    'email'          => $row['email'],
                    'mobile'         => $row['mobile'],
                    'mobilecode'     => "+".(string)$row['mobilecode'],
                    'password'       => Hash::make($row['mobile']),
                    'user_type'      => '2',
                    'whatsappnumber' => $row['whatsappnumber'],
                    'leadtype'       => $row['leadtype'],
                ]);
                
                // lead details variables 
                UserDetail::create([
                    'user_id'   =>  $registeruser->id,
                    'state'     =>  $row['state'], 
                    'refrence'  =>  $row['refrence'], 
                    'growth'    =>  $row['growth'], 
                    'edulevel'  =>  $row['edulevel'], 
                    'gender'    =>  $row['gender'], 
                    'comments'  =>  $row['comments']
                ]);

                // lead status variables 
                if (auth()->user()->department != 2) {
                    $comments = "Lead generated by own ". ucwords(auth()->user()->name);
                    LeadStatus::create([
                        'leadid'        => $registeruser->id,
                        'assignedby'    => '0',
                        'assignedto'    => auth()->user()->id,
                        'level'         => '1',
                        'leadtype'      => $leadtype,
                        'department'    => auth()->user()->department,
                        'sub_department'=> auth()->user()->sub_department,
                        'comments'      => $comments
                    ]);
                }

            }else{
                $message = $raw['mobile'] ." mobile number is already exists...";
                $errorbag->push($message);
            }
        }

        // insterting data in schedule table
        if ($errorbag->isEmpty()) {
            $errorbag->push( "Excel import successfully...");
        }else {
            $key = ['error'=>'Invalid excel sheet. please check'];
            throw new \Maatwebsite\Excel\Validators\ValidationException(
                \Illuminate\Validation\ValidationException::withMessages($key),
                $errorbag->toArray()
            );
        }
    }
}
